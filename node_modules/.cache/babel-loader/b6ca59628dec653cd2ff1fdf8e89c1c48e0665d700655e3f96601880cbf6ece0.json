{"ast":null,"code":"var _jsxFileName = \"/Users/deepanshurai/Desktop/Goodbrowser/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport SummaryCard from './components/SummaryCard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSummarize = async () => {\n    if (!inputText.trim()) return;\n    setLoading(true);\n    setSummary('');\n    const res = await fetch('https://your-backend-url.onrender.com/api/summarize', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: inputText\n      })\n    });\n    const data = await res.json();\n    setSummary(data.summary);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Goodbrowser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"text-input-box\",\n      rows: \"8\",\n      placeholder: \"Paste your long text here...\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSummarize,\n      className: \"summarize-button\",\n      children: loading ? 'Summarizing...' : 'Summarize'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), summary && /*#__PURE__*/_jsxDEV(SummaryCard, {\n      summary: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KRqWqsOMacPGrUtY5NKqq4mWOi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","SummaryCard","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","summary","setSummary","loading","setLoading","handleSummarize","trim","res","fetch","method","headers","body","JSON","stringify","text","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/deepanshurai/Desktop/Goodbrowser/src/App.jsx"],"sourcesContent":["import { useState } from 'react';\nimport SummaryCard from './components/SummaryCard';\nimport './App.css';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSummarize = async () => {\n    if (!inputText.trim()) return;\n    setLoading(true);\n    setSummary('');\n\n    const res = await fetch('https://your-backend-url.onrender.com/api/summarize', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ text: inputText })\n    });\n\n    const data = await res.json();\n    setSummary(data.summary);\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-title\">Goodbrowser</h1>\n      <textarea\n        className=\"text-input-box\"\n        rows=\"8\"\n        placeholder=\"Paste your long text here...\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      ></textarea>\n      <button\n        onClick={handleSummarize}\n        className=\"summarize-button\"\n      >\n        {loading ? 'Summarizing...' : 'Summarize'}</button>\n\n      {summary && <SummaryCard summary={summary} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACN,SAAS,CAACO,IAAI,CAAC,CAAC,EAAE;IACvBF,UAAU,CAAC,IAAI,CAAC;IAChBF,UAAU,CAAC,EAAE,CAAC;IAEd,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,qDAAqD,EAAE;MAC7EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEf;MAAU,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMgB,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC7Bd,UAAU,CAACa,IAAI,CAACd,OAAO,CAAC;IACxBG,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACER,OAAA;IAAKqB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BtB,OAAA;MAAIqB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C1B,OAAA;MACEqB,SAAS,EAAC,gBAAgB;MAC1BM,IAAI,EAAC,GAAG;MACRC,WAAW,EAAC,8BAA8B;MAC1CC,KAAK,EAAE1B,SAAU;MACjB2B,QAAQ,EAAGC,CAAC,IAAK3B,YAAY,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACZ1B,OAAA;MACEiC,OAAO,EAAExB,eAAgB;MACzBY,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAE3Bf,OAAO,GAAG,gBAAgB,GAAG;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAEpDrB,OAAO,iBAAIL,OAAA,CAACF,WAAW;MAACO,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACxB,EAAA,CAxCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}